library(plotly)
library(ggplot2)
library(extrafont)
library(gridExtra)
font_install("fontcm")
loadfonts()
setwd("set0")
dat = c()
filenames <- list.files()[grep(paste("^validation_FA_(?=.*\\.csv)", sep=''), list.files(), perl=TRUE)]
for (filename in filenames) {
print(filename)
this = read.csv(filename, sep=",", header = TRUE)
this$method2 = "FA"
this$method3 = strsplit(filename,"_")[[1]][length(strsplit(filename,"_")[[1]])]
dataset_ref = strsplit(filename,"_")[[1]][3:(length(strsplit(filename,"_")[[1]])-4)]
this$dataset = paste(dataset_ref,collapse="_")
this$filename = filename
dat = rbind(dat, this)
}
filenames2 <- list.files()[grep(paste("^validation_direct_(?=.*\\.csv)", sep=''), list.files(), perl=TRUE)]
for (filename in filenames2) {
print(filename)
this = read.csv(filename, sep=",", header = TRUE)
this$method2 = "regression"
this$method3 = strsplit(filename,"_")[[1]][length(strsplit(filename,"_")[[1]])]
dataset_ref = strsplit(filename,"_")[[1]][3:(length(strsplit(filename,"_")[[1]])-4)]
this$dataset = paste(dataset_ref,collapse="_")
this$filename = filename
dat = rbind(dat, this)
}
dat$method3[dat$method3 == "3000000.csv"] = "mean"
dat$method3[dat$method3 == "30.csv" & dat$method2 == "FA"] = "predictive"
dat$method3[dat$method3 == "30.csv" & dat$method2 == "regression"] = "simple"
dat$method3[dat$method3 == "3000.csv"] = "adaptive3000"
dat$method3[dat$method3 == "30000.csv"] = "adaptive30000"
dat$method4 = paste(dat$method3, dat$method2, dat$method, sep = "_")
dat$score = dat$score / (3600*24) # make days
dat2 = dat[dat$metric == "rmse",]
dat = dat[dat$metric == "mae",]
agg_MAE = as.data.frame(aggregate(dat$score,by=list(method=dat$method4, dataset=dat$dataset), mean))
agg_MAE = agg_MAE[with(agg_MAE, order(dataset, x, method = "radix")), ]
write.csv(agg_MAE,"agg_MAE.csv",quote = F, row.names = F)
agg_RMSE = as.data.frame(aggregate(dat2$score,by=list(method=dat2$method4, dataset=dat2$dataset), mean))
agg_RMSE = agg_RMSE[with(agg_RMSE, order(dataset, x, method = "radix")), ]
p = ggplot(dat, aes(x = nr_events, y = score, color = method4)) + geom_point() + geom_line() +
facet_wrap(~ dataset, ncol = 3, scales = "free") + ylab("MAE, days") + xlab("Prefix length")+
theme(legend.position="top")+
theme(panel.background = element_rect(fill = 'white', colour = 'black',size=0.5)) +
theme(panel.grid.major = element_line(colour = 'lightgrey', size = 0.3))+
theme(legend.background = element_rect(colour = 'white',size = 0.1, linetype='solid'))+
theme(legend.title=element_blank())
ggplotly(p)
p2 = ggplot(dat2, aes(x = nr_events, y = score, color = method4)) + geom_point() + geom_line() +
facet_wrap(~ dataset, ncol = 3, scales = "free") + ylab("RMSE, days") + xlab("Prefix length")+
theme(legend.position="top")+
theme(panel.background = element_rect(fill = 'white', colour = 'black',size=0.5)) +
theme(panel.grid.major = element_line(colour = 'lightgrey', size = 0.3))+
theme(legend.background = element_rect(colour = 'white',size = 0.1, linetype='solid'))+
theme(legend.title=element_blank())
ggplotly(p2)
pdf(file="results_191117-100-0660.pdf",family="CM Roman",width=12,height=10)
print(p)
dev.off()
embed_fonts("results_191117-100-0660.pdf",outfile="results_191117-100-0660.pdf")
View(agg_MAE)
